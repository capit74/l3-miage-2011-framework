/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelStockage.java
 *
 * Created on 26 avr. 2012, 15:46:46
 */
package application.Vue;

import application.Modele.BaseLayer.Fichier;
import java.io.File;
import application.Modele.DAOLayer.FilePacket;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.rmi.RemoteException;
import java.util.Date;
import javax.swing.JFileChooser;

/**
 *
 * @author Home
 */
public class PanelStockage extends javax.swing.JPanel {

    /** Creates new form PanelStockage */
    public PanelStockage(FenPrincipale anc) {
        try {
            initComponents();
            filechooser = new JFileChooser();
            filechooser.setMultiSelectionEnabled(false);
            ancetre = anc;
            jListFichiers.setListData(ancetre.application().getGestionFichier().getCatalogue().toArray());
        } catch (RemoteException ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPaneListeFichier = new javax.swing.JScrollPane();
        jListFichiers = new javax.swing.JList();
        jButtonUpload = new javax.swing.JButton();
        jButtonDownload = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Service de Stockage", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        setLayout(new java.awt.GridBagLayout());

        jListFichiers.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liste", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jListFichiers.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListFichiers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneListeFichier.setViewportView(jListFichiers);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        add(jScrollPaneListeFichier, gridBagConstraints);

        jButtonUpload.setText("Upload");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        add(jButtonUpload, gridBagConstraints);

        jButtonDownload.setText("Download");
        jButtonDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDownloadActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(jButtonDownload, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed

    filechooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
    int val = filechooser.showOpenDialog(this);
    if (val == JFileChooser.APPROVE_OPTION) {
        File file = filechooser.getSelectedFile();
        System.out.println(file.getAbsolutePath());
        FilePacket fichier = new FilePacket(file.getAbsolutePath());
        fichier.readIn();
        try {
            ancetre.application().getGestionFichier().ajouterFichier(ancetre.profil(), new Date(), fichier);
            jListFichiers.setListData(ancetre.application().getGestionFichier().getCatalogue().toArray());
        } catch (RemoteException ex) {
            ex.printStackTrace();
        }
        
    }
}//GEN-LAST:event_jButtonUploadActionPerformed

private void jButtonDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDownloadActionPerformed
    try {
        //recuperation du FilePacket avec rmi
        String nom = ((Fichier)jListFichiers.getSelectedValue()).getChemin();
        FilePacket fichier = ancetre.application().getGestionFichier().download(nom);

        filechooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int val = filechooser.showSaveDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
        try {
            fichier.writeTo(new FileOutputStream(filechooser.getSelectedFile()+"\\"+nom));
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        }
        }
    } catch (RemoteException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jButtonDownloadActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDownload;
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JList jListFichiers;
    private javax.swing.JScrollPane jScrollPaneListeFichier;
    // End of variables declaration//GEN-END:variables
    private JFileChooser filechooser;
    private FenPrincipale ancetre;
}
